{"version":3,"file":"sparkline.component.d.ts","sources":["sparkline.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { NgZone, ElementRef, ChangeDetectorRef, Renderer2 } from '@angular/core';\nimport { ConfigurationService } from './common/configuration.service';\nimport { InstanceEventService } from './events/instance-event.service';\nimport { ChartInstanceObserver } from './common/chart-instance-observer';\nimport { ChartComponent } from './chart.component';\nimport { ThemeService } from './common/theme.service';\nimport { IntlService } from '@progress/kendo-angular-intl';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * The root Chart component.\n *\n * @example\n * ```ts\n * import { Component } from '@angular/core';\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *     <kendo-sparkline [data]=\"data\" type=\"column\">\n *     </kendo-sparkline>\n *   `\n * })\n * class AppComponent {\n *   public data: any[] = [\n *     936, 968, 1025, 999, 998, 1014, 1017, 1010, 1010, 1007,\n *     1004, 988, 990, 988, 987, 995, 946, 954, 991, 984,\n *     974, 956, 986, 936, 955, 1021, 1013, 1005, 958, 953,\n *     952, 940, 937, 980, 966, 965, 928, 916, 910, 980\n *   ];\n * }\n *\n * ```\n */\nexport declare class SparklineComponent extends ChartComponent {\n    configurationService: ConfigurationService;\n    themeService: ThemeService;\n    protected element: ElementRef;\n    protected intl: IntlService;\n    protected localizationService: LocalizationService;\n    protected ngZone: NgZone;\n    protected instanceEventService: InstanceEventService;\n    protected changeDetector: ChangeDetectorRef;\n    protected renderer: Renderer2;\n    /**\n     * The default series type.\n     */\n    type: string;\n    /**\n     * The data for the default Sparkline series.\n     * Discarded if series are supplied.\n     */\n    data: any[];\n    /**\n     * @hidden\n     */\n    tooltipWrapperClass: string;\n    /**\n     * @hidden\n     */\n    tooltipContentClasses: any;\n    protected hostClasses: string[];\n    constructor(configurationService: ConfigurationService, themeService: ThemeService, element: ElementRef, intl: IntlService, localizationService: LocalizationService, ngZone: NgZone, instanceEventService: InstanceEventService, changeDetector: ChangeDetectorRef, renderer: Renderer2);\n    protected createInstance(element: any, observer: ChartInstanceObserver): void;\n    protected updateOptions(): void;\n}\n"]}