{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{bSwM:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return MatCheckbox}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return MatCheckboxModule});var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"8LU1\"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"fXoL\"),_angular_forms__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"3Pt+\"),_angular_material_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(\"FKr1\"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(\"R1ws\"),_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(\"GU7r\"),_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(\"u47x\");const _c0=[\"input\"],_c1=function(){return{enterDuration:150}},_c2=[\"*\"],MAT_CHECKBOX_DEFAULT_OPTIONS=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.s(\"mat-checkbox-default-options\",{providedIn:\"root\",factory:MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY});function MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY(){return{color:\"accent\",clickAction:\"check-indeterminate\"}}let nextUniqueId=0;const defaults=MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY(),MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR={provide:_angular_forms__WEBPACK_IMPORTED_MODULE_2__.k,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.W)(()=>MatCheckbox),multi:!0};class MatCheckboxChange{}class MatCheckboxBase{constructor(_elementRef){this._elementRef=_elementRef}}const _MatCheckboxMixinBase=Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.z)(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.u)(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.v)(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.w)(MatCheckboxBase))));let MatCheckbox=(()=>{class MatCheckbox extends _MatCheckboxMixinBase{constructor(elementRef,_changeDetectorRef,_focusMonitor,_ngZone,tabIndex,_animationMode,_options){super(elementRef),this._changeDetectorRef=_changeDetectorRef,this._focusMonitor=_focusMonitor,this._ngZone=_ngZone,this._animationMode=_animationMode,this._options=_options,this.ariaLabel=\"\",this.ariaLabelledby=null,this._uniqueId=\"mat-checkbox-\"+ ++nextUniqueId,this.id=this._uniqueId,this.labelPosition=\"after\",this.name=null,this.change=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.o,this.indeterminateChange=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.o,this._onTouched=()=>{},this._currentAnimationClass=\"\",this._currentCheckState=0,this._controlValueAccessorChangeFn=()=>{},this._checked=!1,this._disabled=!1,this._indeterminate=!1,this._options=this._options||defaults,this.color=this.defaultColor=this._options.color||defaults.color,this.tabIndex=parseInt(tabIndex)||0}get inputId(){return(this.id||this._uniqueId)+\"-input\"}get required(){return this._required}set required(value){this._required=Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__.c)(value)}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0).subscribe(focusOrigin=>{focusOrigin||Promise.resolve().then(()=>{this._onTouched(),this._changeDetectorRef.markForCheck()})}),this._syncIndeterminate(this._indeterminate)}ngAfterViewChecked(){}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}get checked(){return this._checked}set checked(value){value!=this.checked&&(this._checked=value,this._changeDetectorRef.markForCheck())}get disabled(){return this._disabled}set disabled(value){const newValue=Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__.c)(value);newValue!==this.disabled&&(this._disabled=newValue,this._changeDetectorRef.markForCheck())}get indeterminate(){return this._indeterminate}set indeterminate(value){const changed=value!=this._indeterminate;this._indeterminate=Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__.c)(value),changed&&(this._transitionCheckState(this._indeterminate?3:this.checked?1:2),this.indeterminateChange.emit(this._indeterminate)),this._syncIndeterminate(this._indeterminate)}_isRippleDisabled(){return this.disableRipple||this.disabled}_onLabelTextChange(){this._changeDetectorRef.detectChanges()}writeValue(value){this.checked=!!value}registerOnChange(fn){this._controlValueAccessorChangeFn=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}_getAriaChecked(){return this.checked?\"true\":this.indeterminate?\"mixed\":\"false\"}_transitionCheckState(newState){let oldState=this._currentCheckState,element=this._elementRef.nativeElement;if(oldState!==newState&&(this._currentAnimationClass.length>0&&element.classList.remove(this._currentAnimationClass),this._currentAnimationClass=this._getAnimationClassForCheckStateTransition(oldState,newState),this._currentCheckState=newState,this._currentAnimationClass.length>0)){element.classList.add(this._currentAnimationClass);const animationClass=this._currentAnimationClass;this._ngZone.runOutsideAngular(()=>{setTimeout(()=>{element.classList.remove(animationClass)},1e3)})}}_emitChangeEvent(){const event=new MatCheckboxChange;event.source=this,event.checked=this.checked,this._controlValueAccessorChangeFn(this.checked),this.change.emit(event)}toggle(){this.checked=!this.checked}_onInputClick(event){var _a;const clickAction=null===(_a=this._options)||void 0===_a?void 0:_a.clickAction;event.stopPropagation(),this.disabled||\"noop\"===clickAction?this.disabled||\"noop\"!==clickAction||(this._inputElement.nativeElement.checked=this.checked,this._inputElement.nativeElement.indeterminate=this.indeterminate):(this.indeterminate&&\"check\"!==clickAction&&Promise.resolve().then(()=>{this._indeterminate=!1,this.indeterminateChange.emit(this._indeterminate)}),this.toggle(),this._transitionCheckState(this._checked?1:2),this._emitChangeEvent())}focus(origin=\"keyboard\",options){this._focusMonitor.focusVia(this._inputElement,origin,options)}_onInteractionEvent(event){event.stopPropagation()}_getAnimationClassForCheckStateTransition(oldState,newState){if(\"NoopAnimations\"===this._animationMode)return\"\";let animSuffix=\"\";switch(oldState){case 0:if(1===newState)animSuffix=\"unchecked-checked\";else{if(3!=newState)return\"\";animSuffix=\"unchecked-indeterminate\"}break;case 2:animSuffix=1===newState?\"unchecked-checked\":\"unchecked-indeterminate\";break;case 1:animSuffix=2===newState?\"checked-unchecked\":\"checked-indeterminate\";break;case 3:animSuffix=1===newState?\"indeterminate-checked\":\"indeterminate-unchecked\"}return\"mat-checkbox-anim-\"+animSuffix}_syncIndeterminate(value){const nativeCheckbox=this._inputElement;nativeCheckbox&&(nativeCheckbox.nativeElement.indeterminate=value)}}return MatCheckbox.ɵfac=function(t){return new(t||MatCheckbox)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pb(_angular_core__WEBPACK_IMPORTED_MODULE_1__.l),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pb(_angular_core__WEBPACK_IMPORTED_MODULE_1__.h),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pb(_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_6__.h),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pb(_angular_core__WEBPACK_IMPORTED_MODULE_1__.B),_angular_core__WEBPACK_IMPORTED_MODULE_1__.dc(\"tabindex\"),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pb(_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__.a,8),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pb(MAT_CHECKBOX_DEFAULT_OPTIONS,8))},MatCheckbox.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Jb({type:MatCheckbox,selectors:[[\"mat-checkbox\"]],viewQuery:function(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Rc(_c0,!0),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Rc(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.o,!0)),2&rf){let _t;_angular_core__WEBPACK_IMPORTED_MODULE_1__.wc(_t=_angular_core__WEBPACK_IMPORTED_MODULE_1__.hc())&&(ctx._inputElement=_t.first),_angular_core__WEBPACK_IMPORTED_MODULE_1__.wc(_t=_angular_core__WEBPACK_IMPORTED_MODULE_1__.hc())&&(ctx.ripple=_t.first)}},hostAttrs:[1,\"mat-checkbox\"],hostVars:12,hostBindings:function(rf,ctx){2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Yb(\"id\",ctx.id),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Db(\"tabindex\",null),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Hb(\"mat-checkbox-indeterminate\",ctx.indeterminate)(\"mat-checkbox-checked\",ctx.checked)(\"mat-checkbox-disabled\",ctx.disabled)(\"mat-checkbox-label-before\",\"before\"==ctx.labelPosition)(\"_mat-animation-noopable\",\"NoopAnimations\"===ctx._animationMode))},inputs:{disableRipple:\"disableRipple\",color:\"color\",tabIndex:\"tabIndex\",ariaLabel:[\"aria-label\",\"ariaLabel\"],ariaLabelledby:[\"aria-labelledby\",\"ariaLabelledby\"],id:\"id\",labelPosition:\"labelPosition\",name:\"name\",required:\"required\",checked:\"checked\",disabled:\"disabled\",indeterminate:\"indeterminate\",ariaDescribedby:[\"aria-describedby\",\"ariaDescribedby\"],value:\"value\"},outputs:{change:\"change\",indeterminateChange:\"indeterminateChange\"},exportAs:[\"matCheckbox\"],features:[_angular_core__WEBPACK_IMPORTED_MODULE_1__.Bb([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]),_angular_core__WEBPACK_IMPORTED_MODULE_1__.zb],ngContentSelectors:_c2,decls:17,vars:20,consts:[[1,\"mat-checkbox-layout\"],[\"label\",\"\"],[1,\"mat-checkbox-inner-container\"],[\"type\",\"checkbox\",1,\"mat-checkbox-input\",\"cdk-visually-hidden\",3,\"id\",\"required\",\"checked\",\"disabled\",\"tabIndex\",\"change\",\"click\"],[\"input\",\"\"],[\"matRipple\",\"\",1,\"mat-checkbox-ripple\",\"mat-focus-indicator\",3,\"matRippleTrigger\",\"matRippleDisabled\",\"matRippleRadius\",\"matRippleCentered\",\"matRippleAnimation\"],[1,\"mat-ripple-element\",\"mat-checkbox-persistent-ripple\"],[1,\"mat-checkbox-frame\"],[1,\"mat-checkbox-background\"],[\"version\",\"1.1\",\"focusable\",\"false\",\"viewBox\",\"0 0 24 24\",0,\"xml\",\"space\",\"preserve\",1,\"mat-checkbox-checkmark\"],[\"fill\",\"none\",\"stroke\",\"white\",\"d\",\"M4.1,12.7 9,17.6 20.3,6.3\",1,\"mat-checkbox-checkmark-path\"],[1,\"mat-checkbox-mixedmark\"],[1,\"mat-checkbox-label\",3,\"cdkObserveContent\"],[\"checkboxLabel\",\"\"],[2,\"display\",\"none\"]],template:function(rf,ctx){if(1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_1__.oc(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Vb(0,\"label\",0,1),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Vb(2,\"span\",2),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Vb(3,\"input\",3,4),_angular_core__WEBPACK_IMPORTED_MODULE_1__.gc(\"change\",function($event){return ctx._onInteractionEvent($event)})(\"click\",function($event){return ctx._onInputClick($event)}),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ub(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Vb(5,\"span\",5),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Qb(6,\"span\",6),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ub(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Qb(7,\"span\",7),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Vb(8,\"span\",8),_angular_core__WEBPACK_IMPORTED_MODULE_1__.jc(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Vb(9,\"svg\",9),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Qb(10,\"path\",10),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ub(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.ic(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Qb(11,\"span\",11),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ub(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ub(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Vb(12,\"span\",12,13),_angular_core__WEBPACK_IMPORTED_MODULE_1__.gc(\"cdkObserveContent\",function(){return ctx._onLabelTextChange()}),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Vb(14,\"span\",14),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Mc(15,\" \"),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ub(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.nc(16),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ub(),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ub()),2&rf){const _r0=_angular_core__WEBPACK_IMPORTED_MODULE_1__.xc(1),_r2=_angular_core__WEBPACK_IMPORTED_MODULE_1__.xc(13);_angular_core__WEBPACK_IMPORTED_MODULE_1__.Db(\"for\",ctx.inputId),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Cb(2),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Hb(\"mat-checkbox-inner-container-no-side-margin\",!_r2.textContent||!_r2.textContent.trim()),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Cb(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__.pc(\"id\",ctx.inputId)(\"required\",ctx.required)(\"checked\",ctx.checked)(\"disabled\",ctx.disabled)(\"tabIndex\",ctx.tabIndex),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Db(\"value\",ctx.value)(\"name\",ctx.name)(\"aria-label\",ctx.ariaLabel||null)(\"aria-labelledby\",ctx.ariaLabelledby)(\"aria-checked\",ctx._getAriaChecked())(\"aria-describedby\",ctx.ariaDescribedby),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Cb(2),_angular_core__WEBPACK_IMPORTED_MODULE_1__.pc(\"matRippleTrigger\",_r0)(\"matRippleDisabled\",ctx._isRippleDisabled())(\"matRippleRadius\",20)(\"matRippleCentered\",!0)(\"matRippleAnimation\",_angular_core__WEBPACK_IMPORTED_MODULE_1__.sc(19,_c1))}},directives:[_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.o,_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__.a],styles:[\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"],encapsulation:2,changeDetection:0}),MatCheckbox})(),_MatCheckboxRequiredValidatorModule=(()=>{class _MatCheckboxRequiredValidatorModule{}return _MatCheckboxRequiredValidatorModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Nb({type:_MatCheckboxRequiredValidatorModule}),_MatCheckboxRequiredValidatorModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Mb({factory:function(t){return new(t||_MatCheckboxRequiredValidatorModule)}}),_MatCheckboxRequiredValidatorModule})(),MatCheckboxModule=(()=>{class MatCheckboxModule{}return MatCheckboxModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Nb({type:MatCheckboxModule}),MatCheckboxModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Mb({factory:function(t){return new(t||MatCheckboxModule)},imports:[[_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.p,_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.i,_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__.c,_MatCheckboxRequiredValidatorModule],_angular_material_core__WEBPACK_IMPORTED_MODULE_3__.i,_MatCheckboxRequiredValidatorModule]}),MatCheckboxModule})()}}]);","name":"2-es2015.cb96fecbe603a4d5ea65.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[2],{\n\n/***/ \"bSwM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR */\n/* unused harmony export MAT_CHECKBOX_DEFAULT_OPTIONS */\n/* unused harmony export MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY */\n/* unused harmony export MAT_CHECKBOX_REQUIRED_VALIDATOR */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MatCheckbox; });\n/* unused harmony export MatCheckboxChange */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MatCheckboxModule; });\n/* unused harmony export MatCheckboxRequiredValidator */\n/* unused harmony export _MatCheckboxRequiredValidatorModule */\n/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"8LU1\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"3Pt+\");\n/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"FKr1\");\n/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"R1ws\");\n/* harmony import */ var _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"GU7r\");\n/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"u47x\");\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\n\n\n\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* InjectionToken */ \"s\"]('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = /*@__PURE__*/ MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__[/* NG_VALUE_ACCESSOR */ \"k\"],\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* forwardRef */ \"W\"])(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = /*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* mixinTabIndex */ \"z\"])(/*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* mixinColor */ \"u\"])(/*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* mixinDisableRipple */ \"v\"])(/*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* mixinDisabled */ \"w\"])(MatCheckboxBase))));\nlet MatCheckbox = /*@__PURE__*/ (() => {\n    class MatCheckbox extends _MatCheckboxMixinBase {\n        constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n            super(elementRef);\n            this._changeDetectorRef = _changeDetectorRef;\n            this._focusMonitor = _focusMonitor;\n            this._ngZone = _ngZone;\n            this._animationMode = _animationMode;\n            this._options = _options;\n            /**\n             * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n             * take precedence so this may be omitted.\n             */\n            this.ariaLabel = '';\n            /**\n             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n             */\n            this.ariaLabelledby = null;\n            this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n            /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n            this.id = this._uniqueId;\n            /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n            this.labelPosition = 'after';\n            /** Name value will be applied to the input element if present */\n            this.name = null;\n            /** Event emitted when the checkbox's `checked` value changes. */\n            this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"o\"]();\n            /** Event emitted when the checkbox's `indeterminate` value changes. */\n            this.indeterminateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"o\"]();\n            /**\n             * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n             * @docs-private\n             */\n            this._onTouched = () => { };\n            this._currentAnimationClass = '';\n            this._currentCheckState = 0 /* Init */;\n            this._controlValueAccessorChangeFn = () => { };\n            this._checked = false;\n            this._disabled = false;\n            this._indeterminate = false;\n            this._options = this._options || defaults;\n            this.color = this.defaultColor = this._options.color || defaults.color;\n            this.tabIndex = parseInt(tabIndex) || 0;\n        }\n        /** Returns the unique id for the visual hidden input. */\n        get inputId() { return `${this.id || this._uniqueId}-input`; }\n        /** Whether the checkbox is required. */\n        get required() { return this._required; }\n        set required(value) { this._required = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__[/* coerceBooleanProperty */ \"c\"])(value); }\n        ngAfterViewInit() {\n            this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n                if (!focusOrigin) {\n                    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                    // Angular does not expect events to be raised during change detection, so any state change\n                    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                    // telling the form control it has been touched until the next tick.\n                    Promise.resolve().then(() => {\n                        this._onTouched();\n                        this._changeDetectorRef.markForCheck();\n                    });\n                }\n            });\n            this._syncIndeterminate(this._indeterminate);\n        }\n        // TODO: Delete next major revision.\n        ngAfterViewChecked() { }\n        ngOnDestroy() {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        /**\n         * Whether the checkbox is checked.\n         */\n        get checked() { return this._checked; }\n        set checked(value) {\n            if (value != this.checked) {\n                this._checked = value;\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Whether the checkbox is disabled. This fully overrides the implementation provided by\n         * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n         */\n        get disabled() { return this._disabled; }\n        set disabled(value) {\n            const newValue = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__[/* coerceBooleanProperty */ \"c\"])(value);\n            if (newValue !== this.disabled) {\n                this._disabled = newValue;\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n         * set to false.\n         */\n        get indeterminate() { return this._indeterminate; }\n        set indeterminate(value) {\n            const changed = value != this._indeterminate;\n            this._indeterminate = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__[/* coerceBooleanProperty */ \"c\"])(value);\n            if (changed) {\n                if (this._indeterminate) {\n                    this._transitionCheckState(3 /* Indeterminate */);\n                }\n                else {\n                    this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n                }\n                this.indeterminateChange.emit(this._indeterminate);\n            }\n            this._syncIndeterminate(this._indeterminate);\n        }\n        _isRippleDisabled() {\n            return this.disableRipple || this.disabled;\n        }\n        /** Method being called whenever the label text changes. */\n        _onLabelTextChange() {\n            // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n            // component will be only marked for check, but no actual change detection runs automatically.\n            // Instead of going back into the zone in order to trigger a change detection which causes\n            // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n            // an explicit change detection for the checkbox view and its children.\n            this._changeDetectorRef.detectChanges();\n        }\n        // Implemented as part of ControlValueAccessor.\n        writeValue(value) {\n            this.checked = !!value;\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnChange(fn) {\n            this._controlValueAccessorChangeFn = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnTouched(fn) {\n            this._onTouched = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n        }\n        _getAriaChecked() {\n            if (this.checked) {\n                return 'true';\n            }\n            return this.indeterminate ? 'mixed' : 'false';\n        }\n        _transitionCheckState(newState) {\n            let oldState = this._currentCheckState;\n            let element = this._elementRef.nativeElement;\n            if (oldState === newState) {\n                return;\n            }\n            if (this._currentAnimationClass.length > 0) {\n                element.classList.remove(this._currentAnimationClass);\n            }\n            this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n            this._currentCheckState = newState;\n            if (this._currentAnimationClass.length > 0) {\n                element.classList.add(this._currentAnimationClass);\n                // Remove the animation class to avoid animation when the checkbox is moved between containers\n                const animationClass = this._currentAnimationClass;\n                this._ngZone.runOutsideAngular(() => {\n                    setTimeout(() => {\n                        element.classList.remove(animationClass);\n                    }, 1000);\n                });\n            }\n        }\n        _emitChangeEvent() {\n            const event = new MatCheckboxChange();\n            event.source = this;\n            event.checked = this.checked;\n            this._controlValueAccessorChangeFn(this.checked);\n            this.change.emit(event);\n        }\n        /** Toggles the `checked` state of the checkbox. */\n        toggle() {\n            this.checked = !this.checked;\n        }\n        /**\n         * Event handler for checkbox input element.\n         * Toggles checked state if element is not disabled.\n         * Do not toggle on (change) event since IE doesn't fire change event when\n         *   indeterminate checkbox is clicked.\n         * @param event\n         */\n        _onInputClick(event) {\n            var _a;\n            const clickAction = (_a = this._options) === null || _a === void 0 ? void 0 : _a.clickAction;\n            // We have to stop propagation for click events on the visual hidden input element.\n            // By default, when a user clicks on a label element, a generated click event will be\n            // dispatched on the associated input element. Since we are using a label element as our\n            // root container, the click event on the `checkbox` will be executed twice.\n            // The real click event will bubble up, and the generated click event also tries to bubble up.\n            // This will lead to multiple click events.\n            // Preventing bubbling for the second event will solve that issue.\n            event.stopPropagation();\n            // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n            if (!this.disabled && clickAction !== 'noop') {\n                // When user manually click on the checkbox, `indeterminate` is set to false.\n                if (this.indeterminate && clickAction !== 'check') {\n                    Promise.resolve().then(() => {\n                        this._indeterminate = false;\n                        this.indeterminateChange.emit(this._indeterminate);\n                    });\n                }\n                this.toggle();\n                this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n                // Emit our custom change event if the native input emitted one.\n                // It is important to only emit it, if the native input triggered one, because\n                // we don't want to trigger a change event, when the `checked` variable changes for example.\n                this._emitChangeEvent();\n            }\n            else if (!this.disabled && clickAction === 'noop') {\n                // Reset native input when clicked with noop. The native checkbox becomes checked after\n                // click, reset it to be align with `checked` value of `mat-checkbox`.\n                this._inputElement.nativeElement.checked = this.checked;\n                this._inputElement.nativeElement.indeterminate = this.indeterminate;\n            }\n        }\n        /** Focuses the checkbox. */\n        focus(origin = 'keyboard', options) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        _onInteractionEvent(event) {\n            // We always have to stop propagation on the change event.\n            // Otherwise the change event, from the input element, will bubble up and\n            // emit its event object to the `change` output.\n            event.stopPropagation();\n        }\n        _getAnimationClassForCheckStateTransition(oldState, newState) {\n            // Don't transition if animations are disabled.\n            if (this._animationMode === 'NoopAnimations') {\n                return '';\n            }\n            let animSuffix = '';\n            switch (oldState) {\n                case 0 /* Init */:\n                    // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                    // [checked] bound to it.\n                    if (newState === 1 /* Checked */) {\n                        animSuffix = 'unchecked-checked';\n                    }\n                    else if (newState == 3 /* Indeterminate */) {\n                        animSuffix = 'unchecked-indeterminate';\n                    }\n                    else {\n                        return '';\n                    }\n                    break;\n                case 2 /* Unchecked */:\n                    animSuffix = newState === 1 /* Checked */ ?\n                        'unchecked-checked' : 'unchecked-indeterminate';\n                    break;\n                case 1 /* Checked */:\n                    animSuffix = newState === 2 /* Unchecked */ ?\n                        'checked-unchecked' : 'checked-indeterminate';\n                    break;\n                case 3 /* Indeterminate */:\n                    animSuffix = newState === 1 /* Checked */ ?\n                        'indeterminate-checked' : 'indeterminate-unchecked';\n                    break;\n            }\n            return `mat-checkbox-anim-${animSuffix}`;\n        }\n        /**\n         * Syncs the indeterminate value with the checkbox DOM node.\n         *\n         * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n         * property is supported on an element boils down to `if (propName in element)`. Domino's\n         * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n         * server-side rendering.\n         */\n        _syncIndeterminate(value) {\n            const nativeCheckbox = this._inputElement;\n            if (nativeCheckbox) {\n                nativeCheckbox.nativeElement.indeterminate = value;\n            }\n        }\n    }\n    MatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ElementRef */ \"l\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ChangeDetectorRef */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_6__[/* FocusMonitor */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* NgZone */ \"B\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵinjectAttribute */ \"dc\"]('tabindex'), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__[/* ANIMATION_MODULE_TYPE */ \"a\"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\n    MatCheckbox.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineComponent */ \"Jb\"]({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵviewQuery */ \"Rc\"](_c0, true);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵviewQuery */ \"Rc\"](_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* MatRipple */ \"o\"], true);\n            }\n            if (rf & 2) {\n                let _t;\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵqueryRefresh */ \"wc\"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵloadQuery */ \"hc\"]()) && (ctx._inputElement = _t.first);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵqueryRefresh */ \"wc\"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵloadQuery */ \"hc\"]()) && (ctx.ripple = _t.first);\n            }\n        }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵhostProperty */ \"Yb\"](\"id\", ctx.id);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵattribute */ \"Db\"](\"tabindex\", null);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵclassProp */ \"Hb\"](\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n            }\n        }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵProvidersFeature */ \"Bb\"]([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵInheritDefinitionFeature */ \"zb\"]], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵprojectionDef */ \"oc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](0, \"label\", 0, 1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](2, \"span\", 2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](3, \"input\", 3, 4);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵlistener */ \"gc\"](\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](5, \"span\", 5);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelement */ \"Qb\"](6, \"span\", 6);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelement */ \"Qb\"](7, \"span\", 7);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](8, \"span\", 8);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceSVG */ \"jc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](9, \"svg\", 9);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelement */ \"Qb\"](10, \"path\", 10);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceHTML */ \"ic\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelement */ \"Qb\"](11, \"span\", 11);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](12, \"span\", 12, 13);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵlistener */ \"gc\"](\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](14, \"span\", 14);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtext */ \"Mc\"](15, \"\\u00A0\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵprojection */ \"nc\"](16);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n            }\n            if (rf & 2) {\n                const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵreference */ \"xc\"](1);\n                const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵreference */ \"xc\"](13);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵattribute */ \"Db\"](\"for\", ctx.inputId);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Cb\"](2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵclassProp */ \"Hb\"](\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Cb\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"pc\"](\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵattribute */ \"Db\"](\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Cb\"](2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"pc\"](\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵpureFunction0 */ \"sc\"](19, _c1));\n            }\n        }, directives: [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* MatRipple */ \"o\"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__[/* CdkObserveContent */ \"a\"]], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatCheckbox;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__[/* NG_VALIDATORS */ \"j\"],\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* forwardRef */ \"W\"])(() => MatCheckboxRequiredValidator),\n    multi: true\n};\nlet MatCheckboxRequiredValidator = /*@__PURE__*/ (() => {\n    class MatCheckboxRequiredValidator extends _angular_forms__WEBPACK_IMPORTED_MODULE_2__[/* CheckboxRequiredValidator */ \"a\"] {\n    }\n    MatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\n    MatCheckboxRequiredValidator.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineDirective */ \"Kb\"]({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵProvidersFeature */ \"Bb\"]([MAT_CHECKBOX_REQUIRED_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵInheritDefinitionFeature */ \"zb\"]] });\n    return MatCheckboxRequiredValidator;\n})();\nconst ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵgetInheritedFactory */ \"Xb\"](MatCheckboxRequiredValidator);\nlet _MatCheckboxRequiredValidatorModule = /*@__PURE__*/ (() => {\n    class _MatCheckboxRequiredValidatorModule {\n    }\n    _MatCheckboxRequiredValidatorModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineNgModule */ \"Nb\"]({ type: _MatCheckboxRequiredValidatorModule });\n    _MatCheckboxRequiredValidatorModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjector */ \"Mb\"]({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n    return _MatCheckboxRequiredValidatorModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵsetNgModuleScope */ \"Ec\"](_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\nlet MatCheckboxModule = /*@__PURE__*/ (() => {\n    class MatCheckboxModule {\n    }\n    MatCheckboxModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineNgModule */ \"Nb\"]({ type: MatCheckboxModule });\n    MatCheckboxModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjector */ \"Mb\"]({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n                _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* MatRippleModule */ \"p\"], _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* MatCommonModule */ \"i\"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__[/* ObserversModule */ \"c\"],\n                _MatCheckboxRequiredValidatorModule\n            ], _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* MatCommonModule */ \"i\"], _MatCheckboxRequiredValidatorModule] });\n    return MatCheckboxModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵsetNgModuleScope */ \"Ec\"](MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* MatRippleModule */ \"p\"], _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* MatCommonModule */ \"i\"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__[/* ObserversModule */ \"c\"], _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[/* MatCommonModule */ \"i\"], _MatCheckboxRequiredValidatorModule]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=checkbox.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":null}